#!/usr/bin/env sh


# MIT License

# Copyright (c) Boreal Information Systems Inc.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


build_dir="$1"
cache_dir="$2"

script_relative_dir=$(dirname "$0")
cd "${script_relative_dir}/.." || exit $?
buildpack_dir=$(pwd)

borealis_pg_build_dir="${build_dir}/.borealis-pg"

wait_script_name='server-shutdown-wait.sh'
wait_script_path="${borealis_pg_build_dir}/${wait_script_name}"

autossh_version='1.4g'
autossh_archive_name="autossh-${autossh_version}.tgz"
autossh_archive_checksum='5fc3cee3361ca1615af862364c480593171d0c54ec156de79fc421e31ae21277'
autossh_primary_download_url="https://www.harding.motd.ca/autossh/${autossh_archive_name}"
autossh_secondary_download_url="https://www.borealis-data.com/autossh/${autossh_archive_name}"
autossh_cache_dir="${cache_dir}/autossh-${autossh_version}"
autossh_cache_binary_path="${autossh_cache_dir}/autossh"
autossh_build_dir="${borealis_pg_build_dir}/autossh"
autossh_build_binary_path="${autossh_build_dir}/autossh"

startup_script_build_dir="${build_dir}/.profile.d"
secure_tunnel_script_name='borealis-pg-init-secure-tunnel.sh'

mkdir -p "$borealis_pg_build_dir"

echo "-----> Installing autossh ${autossh_version}..."

if [ -f "$autossh_cache_binary_path" ]
then
    echo "       Using cached copy of autossh ${autossh_version}..."
else
    echo "       Downloading autossh ${autossh_version}..."
    temp_autossh_archive_path="${cache_dir}/${autossh_archive_name}"
    temp_autossh_checksum_path="${temp_autossh_archive_path}.sha256"
    curl -s -f -o "$temp_autossh_archive_path" "$autossh_primary_download_url" || curl -s -f -o "$temp_autossh_archive_path" "$autossh_secondary_download_url" || exit $?
    echo "${autossh_archive_checksum}  ${temp_autossh_archive_path}" > "$temp_autossh_checksum_path"
    sha256sum -c "$temp_autossh_checksum_path" > /dev/null || exit $?
    tar -x -C "$cache_dir" -f "$temp_autossh_archive_path" || exit $?
    rm "$temp_autossh_archive_path" "$temp_autossh_checksum_path"

    echo "       Building autossh ${autossh_version}..."
    cd "$autossh_cache_dir" || exit $?
    ./configure --quiet || exit $?
    make --quiet || exit $?
    cd "$buildpack_dir" || exit $?

    echo "       Cleaning up autossh ${autossh_version} build directory..."
    temp_autossh_binary_path="$cache_dir/autossh.borealis-pg-tmp"
    mv "$autossh_cache_binary_path" "$temp_autossh_binary_path" || exit $?
    rm -rf "$autossh_cache_dir" || exit $?
    mkdir -p "$autossh_cache_dir"
    mv "$temp_autossh_binary_path" "$autossh_cache_binary_path" || exit $?
fi

mkdir -p "$autossh_build_dir"
cp "$autossh_cache_binary_path" "$autossh_build_binary_path"
chmod a+x "$autossh_build_binary_path"

mkdir -p "$startup_script_build_dir"

echo '-----> Creating SSH tunnel startup script...'
mkdir -p "$startup_script_build_dir"
cp "${buildpack_dir}/profile.d/${secure_tunnel_script_name}" "$startup_script_build_dir"
chmod a+x "${startup_script_build_dir}/${secure_tunnel_script_name}"

echo '-----> Creating server shutdown wait script...'
cp "${buildpack_dir}/scripts/${wait_script_name}" "$wait_script_path"
chmod a+x "$wait_script_path"

echo '       Done'
